// Majority Element
// https://leetcode.com/problems/majority-element/description/

class Solution 
{
    private int solve(int arr[])
    {
        int n = arr.length;
        HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i = 0; i < n; i++)
        {
            hm.put(arr[i], hm.getOrDefault(arr[i], 0) + 1);
        }

        for(int key : hm.keySet())
        {
            if(hm.get(key) > n/2) return key;
        }
        return -1;
    }
    public int majorityElement(int[] arr) 
    {
        //return solve(arr); // TC -> O(N), SC -> O(N)
        
        int n = arr.length; 
        int element = 0;
        int cnt = 0;
        // moose voting algorithm
        for(int i = 0; i < n; i++)
        {
            if(cnt == 0)
            {
                element = arr[i];
                cnt = 1;
            }
            else if(element == arr[i]) cnt--;
            else cnt--;
        }
        return element;
    }
}
