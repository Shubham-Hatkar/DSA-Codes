// 86. Partition List
// https://leetcode.com/problems/partition-list/description/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution 
{
    public ListNode partition(ListNode head, int x) 
    {
        ListNode dummy = new ListNode(-1);
        ListNode copy = dummy;

        ListNode dummy2 = new ListNode(-1);
        ListNode copy2 = dummy2;

        ListNode curr = head;
        while(curr != null)
        {
            ListNode nextOfCurr = curr.next;

            if(curr.val < x) 
            {
                dummy.next = curr;
                dummy = dummy.next;
                dummy.next = null;
            }
            else
            {
                dummy2.next = curr;
                dummy2 = dummy2.next;
                dummy2.next = null;
            }
            curr = nextOfCurr;
        }
        dummy.next = copy2.next;
        return copy.next;
    }
}
