// 24. Swap Nodes in Pairs
// https://leetcode.com/problems/swap-nodes-in-pairs/description/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution 
{
    public ListNode swapPairs(ListNode head) 
    {
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode prev = dummy;
        ListNode curr = dummy;
        ListNode nxt = dummy;

        int len = 0;
        ListNode ptr = head;
        while(ptr != null)
        {
            len++;
            ptr = ptr.next;
        }

        while(len >= 2)
        {
            curr = prev.next;
            nxt = curr.next;
            for(int i = 1; i < 2; i++)
            {
                curr.next = nxt.next;
                nxt.next = prev.next;
                prev.next = nxt;
                nxt = curr.next;
            }
            prev = curr;
            len -= 2;
        }
        return dummy.next;
    }
}








