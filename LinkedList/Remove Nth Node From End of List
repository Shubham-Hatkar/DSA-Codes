// 19. Remove Nth Node From End of List
// https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution 
{
    private int getSize(ListNode head)
    {
        int len = 0;
        ListNode curr = head;
        while(curr != null)
        {
            len++;
            curr = curr.next;
        }
        return len;
    }
    public ListNode removeNthFromEnd(ListNode head, int n) 
    {
        if(head == null || n == 0 ) return head;

        int size = getSize(head);
        if(n == size)
        {
            head = head.next;
            return head;
        }
        ListNode curr = head;
        for(int i = 1; i < size - n; i++)
        {
            curr = curr.next;
        }
        ListNode nextOfCurr = curr.next.next;
        curr.next = nextOfCurr;
        return head;
    }
}
