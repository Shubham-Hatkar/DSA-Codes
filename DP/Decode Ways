// 91. Decode Ways
// https://leetcode.com/problems/decode-ways/description/

class Solution 
{
    private int solve(int idx, String s, int dp[])
    {
        if(idx < s.length() && s.charAt(idx) == '0') return 0;
        if(idx >= s.length()) return 1;
        if(dp[idx] != -1) return dp[idx];

        int first = 0, second = 0;
        if(s.charAt(idx) != '0') 
        {
            first = solve(idx + 1, s, dp);
        }
        if(idx + 1 < s.length() && ((s.charAt(idx) == '1' && s.charAt(idx + 1) <= '9')
        || (s.charAt(idx) == '2' && s.charAt(idx + 1) <= '6'))) 
        {
            second = solve(idx + 2, s, dp);
        }
        dp[idx] = first + second;
        return dp[idx];
    }
    public int numDecodings(String s) 
    {
        int dp[] = new int[s.length()];
        Arrays.fill(dp, -1);
        return solve(0, s, dp);
    }
}
