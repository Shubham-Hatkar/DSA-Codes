// 1035. Uncrossed Lines
// https://leetcode.com/problems/uncrossed-lines/description/

class Solution 
{
    private int recursion(int i, int j, int nums1[], int nums2[], int dp[][])
    {
        if(i >= nums1.length || j >= nums2.length) return 0;

        if(dp[i][j] != -1) return dp[i][j];

        if(nums1[i] == nums2[j]) 
            dp[i][j] = 1 + recursion(i + 1, j + 1, nums1, nums2, dp);
        else
            dp[i][j] = Math.max(recursion(i + 1, j, nums1, nums2, dp), recursion(i, j + 1, nums1, nums2, dp));
        return dp[i][j];
    }
    public int maxUncrossedLines(int[] nums1, int[] nums2) 
    {
        int dp[][] = new int[nums1.length][nums2.length];
        for(int row[] : dp)
        {
            Arrays.fill(row, -1);
        }
        return recursion(0, 0, nums1, nums2, dp);
    }
}
