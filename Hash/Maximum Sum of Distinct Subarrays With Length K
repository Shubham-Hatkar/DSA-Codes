// 2461. Maximum Sum of Distinct Subarrays With Length K
// https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k/description/

class Solution 
{
    public long maximumSubarraySum(int[] nums, int k) 
    {
        HashMap<Integer,Integer> hm = new HashMap<>();
        int n = nums.length;
        int start = 0;
        int end = 0;
        long sum = 0;
        long ans = 0;

        while(end < n)
        {
            while(hm.size() == k || hm.containsKey(nums[end]))
            {
                sum -= nums[start];
                hm.remove(nums[start]);
                start++;
            }
            sum += nums[end];
            hm.put(nums[end],1);
            end++;
            if(hm.size() == k) ans = Math.max(ans, sum);
        }
        return ans;
    }
}
