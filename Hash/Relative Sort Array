// 1122. Relative Sort Array
// https://leetcode.com/problems/relative-sort-array/description/

class Solution 
{
    public int[] relativeSortArray(int[] arr1, int[] arr2) 
    {
        HashMap<Integer, Integer> hm = new HashMap<>();
        for(int n : arr1)
        {
            hm.put(n, hm.getOrDefault(n, 0) + 1);
        }

        int n = arr1.length;
        int ans[] = new int[n];
        int j = 0;
        for(int i = 0; i < arr2.length; i++)
        {
            int key = arr2[i];
            int repeat = (hm.get(key) != null) ? hm.get(key) : 0;
            while(repeat-- > 0)
            {
                ans[j] = key;
                j++;
            } 
            hm.remove(arr2[i]);
        }
        if(hm.size() > 0)
        {
            ArrayList<Integer> list = new ArrayList<>();
            for(int key : hm.keySet())
            {
                int repeat = hm.get(key);
                while(repeat-- > 0) list.add(key);
            }

            Collections.sort(list);
            for(int num : list)
            {
                ans[j] = num;
                j++;
            }
        }
        return ans;
    }
}
