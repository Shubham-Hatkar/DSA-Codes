// 1026. Maximum Difference Between Node and Ancestor
// https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    private int maxDiff(TreeNode root, int min, int max)
    {
        if(root == null) return max - min;
        min = Math.min(min, root.val);
        max = Math.max(max, root.val);

        int left = maxDiff(root.left, min, max);
        int right = maxDiff(root.right, min, max);
        return Math.max(left, right);
    }
    public int maxAncestorDiff(TreeNode root) 
    {
        int min = 1000001;
        int max = -1;
        return maxDiff(root, min, max);
    }
}
