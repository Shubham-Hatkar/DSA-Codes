// 501. Find Mode in Binary Search Tree
// https://leetcode.com/problems/find-mode-in-binary-search-tree/description/

###### With Space ############

class Solution 
{
    int max;
    private void preorder(TreeNode root, HashMap<Integer,Integer> hm)
    {
        if(root == null) return;
        if(hm.containsKey(root.val)) hm.put(root.val, hm.get(root.val) + 1);
        else hm.put(root.val, 1);
        max = Math.max(max, hm.get(root.val));

        preorder(root.left, hm);
        preorder(root.right, hm);
    }
    public int[] findMode(TreeNode root) 
    {
        max = 0;
        HashMap<Integer,Integer> hm = new HashMap<>();
        preorder(root, hm);
        
        int count = 0;
        for(int key : hm.keySet())
        {
            if(hm.get(key) == max) count++;
        }

        int ans[] = new int[count];
        int i = 0;
        for(int key : hm.keySet())
        {
            if(hm.get(key) == max) ans[i++] = key;
        }
        return ans;
    }
}













