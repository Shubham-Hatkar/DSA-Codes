// 897. Increasing Order Search Tree
// https://leetcode.com/problems/increasing-order-search-tree/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{   
    TreeNode dummy;
    TreeNode copyOfDummy;
    private void inorder(TreeNode root)
    {
        if(root == null) return;
        inorder(root.left);

        TreeNode nn = new TreeNode(root.val);
        dummy.right = nn;
        dummy = dummy.right;

        inorder(root.right);
    }
    public TreeNode increasingBST(TreeNode root) 
    {
        dummy = new TreeNode(-1);
        copyOfDummy = dummy;
        inorder(root);
        return copyOfDummy.right;
    }
}





