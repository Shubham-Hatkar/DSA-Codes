// 114. Flatten Binary Tree to Linked List
// https://leetcode.com/problems/flatten-binary-tree-to-linked-list/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public void flatten(TreeNode root) 
    {
        if(root == null) return;

        Stack<TreeNode> st = new Stack<>();
        st.push(root);

        while(st.size() > 0)
        {
            TreeNode temp = st.pop();
            if(temp.right != null) st.push(temp.right);
            if(temp.left != null) st.push(temp.left);
            if(st.size() > 0) temp.right = st.peek();
            temp.left = null;
        }
    }
}



