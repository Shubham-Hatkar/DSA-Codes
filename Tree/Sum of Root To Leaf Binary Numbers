// 1022. Sum of Root To Leaf Binary Numbers
// https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/description/


class Solution 
{
    int sum;
    private int convertNo(List<Integer> path)
    {
        int n = path.size();
        int num = 0;
        for(int i = n - 1; i >= 0; i--)
        {
            int ch = path.get(i);
            if(ch == 1)
            num += (int)Math.pow(2, n - i - 1);
        }
        return num;
    }
    private void preOrder(TreeNode root, List<Integer> path)
    {
        if(root == null) return;
        if(root.left == null && root.right == null)
        {
            path.add(root.val);
            sum += convertNo(path);
            System.out.println(sum);
            path.remove(path.size()-1);
            return;
        }
        path.add(root.val);
        preOrder(root.left, path);
        preOrder(root.right, path);
        path.remove(path.size()-1);
    }
    public int sumRootToLeaf(TreeNode root) 
    {
        sum = 0;
        List<Integer> path = new ArrayList<>();
        preOrder(root, path);
        return sum;
    }
}

