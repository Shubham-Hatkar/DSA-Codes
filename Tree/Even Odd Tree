// 1609. Even Odd Tree
// https://leetcode.com/problems/even-odd-tree/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public boolean isEvenOddTree(TreeNode root) 
    {
        if(root == null || root.val % 2 == 0) return false;

        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);

        int level = 0;
        while(!q.isEmpty())
        {
            int size = q.size();
            int prev = 0;
            for(int i = 0; i < size; i++)
            {
                TreeNode temp = q.remove();
                if(i == 0) prev = temp.val;
                if(level % 2 == 0)
                {
                    if(temp.val % 2 == 0) return false;
                    if(i > 0 && temp.val <= prev) return false;
                    prev = temp.val;
                }
                else
                {
                    if(temp.val % 2 == 1) return false;
                    if(i > 0 && temp.val >= prev) return false;
                    prev = temp.val;
                }
                
                if(temp.left != null) q.add(temp.left);
                if(temp.right != null) q.add(temp.right);
            }
            if(level == 0) level = 1;
            else level = 0;
        }
        return true;
    }
}
