// 2090. K Radius Subarray Averages
// https://leetcode.com/problems/k-radius-subarray-averages/description/

class Solution 
{
    public int[] getAverages(int[] nums, int k) 
    {
        if(k == 0) return nums;

        int n = nums.length;
        long prefix[] = new long[n+1];
        for(int i = 0; i < n; i++)
            prefix[i+1] = prefix[i] + nums[i];
        
        int ans[] = new int[n];
        Arrays.fill(ans, -1);

        for(int i = k; i < n - k; i++)
        {
            ans[i] = (int)((prefix[i+k+1] - prefix[i-k]) / (2 * k + 1));   
        }
        return ans;
    }
}
