// 1582. Special Positions in a Binary Matrix
// https://leetcode.com/problems/special-positions-in-a-binary-matrix/description/

class Solution 
{
    private boolean isRowCorrect(int idx, int arr[][])
    {
        int countOnes = 0;
        for(int i = 0; i < arr[0].length; i++)
        {
            if(arr[idx][i] == 1) countOnes++;
            if(countOnes > 1) return false;
        }
        return true;
    }
    private boolean isColCorrect(int idx, int arr[][])
    {
        int countOnes = 0;
        for(int i = 0; i < arr.length; i++)
        {
            if(arr[i][idx] == 1) countOnes++;
            if(countOnes > 1) return false;
        }
        return true;
    }
    public int numSpecial(int[][] mat) 
    {
        int specialPositions = 0;
        int n = mat.length;
        int m = mat[0].length;

        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < m; j++)
            {
                if(mat[i][j] == 1 && isRowCorrect(i, mat) && isColCorrect(j, mat))
                    specialPositions++;
            }
        }
        return specialPositions;
    }
}
